setwd("D:/Documentos/abi/Udemy/machineLearning-RyPython/Part 2 Regression/Section 6 Polinomial Regression")
dataset = read.csv('Position_Salaries.csv')
View(dataset)
View(dataset)
dataset = dataset[, 2:3]
View(dataset)
#Ajustar modelo re regresión lineal cone l conjunto de datos
lin_reg = lm(formula = Salary ~ . ,
data= dataset)
summary(lin_reg)
#Ajustar el modelo de regresion polinomica con el conjunto de datos
dataset$Level2 = dataset$Level^2
View(dataset)
dataset$Level3 = dataset$Level^3
poly_reg = lm(formula = Salary ~ . ,
data= dataset)
summary(poly_reg)
#Visualización del modelo lineal
library(ggplot2)
ggplot()+ geom_point(aes(x= dataset$Level, y= dataset$Salary),
color= "red") +
geom_line(aes(x = dataset$Level, y= predict(lin_reg, newdata = dataset)),
color= "blue") +
ggtitle("Predicción lineal del sueldo en función del nivel del empleado") +
xlab("Nivel del empleado") +
ylab("Sueldo en USD")
#Visualizaciónl del modelo polnómico
ggplot()+ geom_point(aes(x= dataset$Level2, y= dataset$Salary),
color= "red") +
geom_line(aes(x = dataset$Level, y= predict(lin_reg, newdata = dataset)),
color= "blue") +
ggtitle("Predicción polinómica del sueldo en función del nivel del empleado") +
xlab("Nivel del empleado") +
ylab("Sueldo en USD")
ggplot()+ geom_point(aes(x= dataset$Level, y= dataset$Salary),
color= "red") +
geom_line(aes(x = dataset$Level, y= predict(poly_reg, newdata = dataset)),
color= "blue") +
ggtitle("Predicción lineal del sueldo en función del nivel del empleado") +
xlab("Nivel del empleado") +
ylab("Sueldo en USD")
#Visualizaciónl del modelo polnómico
ggplot()+ geom_point(aes(x= dataset$Level2, y= dataset$Salary),
color= "red") +
geom_line(aes(x = dataset$Level, y= predict(poly_reg, newdata = dataset)),
color= "blue") +
ggtitle("Predicción polinómica del sueldo en función del nivel del empleado") +
xlab("Nivel del empleado") +
ylab("Sueldo en USD")
#Visualizaciónl del modelo polnómico
ggplot()+ geom_point(aes(x= dataset$Level, y= dataset$Salary),
color= "red") +
geom_line(aes(x = dataset$Level, y= predict(poly_reg, newdata = dataset)),
color= "blue") +
ggtitle("Predicción polinómica del sueldo en función del nivel del empleado") +
xlab("Nivel del empleado") +
ylab("Sueldo en USD")
dataset$Level4 = dataset$Level^4
poly_reg = lm(formula = Salary ~ . ,
data= dataset)
#Visualizaciónl del modelo polnómico
ggplot()+ geom_point(aes(x= dataset$Level, y= dataset$Salary),
color= "red") +
geom_line(aes(x = dataset$Level, y= predict(poly_reg, newdata = dataset)),
color= "blue") +
ggtitle("Predicción polinómica del sueldo en función del nivel del empleado") +
xlab("Nivel del empleado") +
ylab("Sueldo en USD")
# predicción de nuevos resultados con regresión lineal
y_pred= predict(lin_reg, newdata = data.frame(Level = 6.5))
#predicción de nuevos resultados con regresión polinómica
y_pred_poly= predict(poly_reg, newdata = data.frame(Level = 6.5,
Level2 = 6.5^2,
Level3 = 6.5^3,
Level4 = 6.5^4))
#Visualizaciónl del modelo polnómico
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot()+ geom_point(aes(x= dataset$Level, y= dataset$Salary),
color= "red") +
geom_line(aes(x = x_grid, y= predict(poly_reg, newdata = data.frame(Level=x_grid))),
color= "blue") +
ggtitle("Predicción polinómica del sueldo en función del nivel del empleado") +
xlab("Nivel del empleado") +
ylab("Sueldo en USD")
ggplot()+ geom_point(aes(x= dataset$Level, y= dataset$Salary),
color= "red") +
geom_line(aes(x = x_grid, y= predict(poly_reg, newdata = data.frame(Level=x_grid,
Level2 = x_grid^2,
Level3 = x_grid^3,
Level4 = x_grid^4))),
color= "blue") +
ggtitle("Predicción polinómica del sueldo en función del nivel del empleado") +
xlab("Nivel del empleado") +
ylab("Sueldo en USD")
setwd("D:/Documentos/abi/Udemy/machineLearning-RyPython/Part 2 Regression/Section 7 - Support Vector Regression (SVR)")
#Ajustar el modelo de regresión
install.packages("e1071")
library(e1071)
dataset = read.csv('Position_Salaries.csv')
View(dataset)
library(e1071)
regression = svm(formula = Salary ~ . ,
data = dataset,
type = "eps-regression",
kernel = "radial")
#predicción de nuevos resultados con regresión polinómica
y_pred_poly= predict(regression, newdata = data.frame(Level = 6.5))
#predicción de nuevos resultados con regresión polinómica
y_pred= predict(regression, newdata = data.frame(Level = 6.5))
dataset = dataset[, 2:3]
regression = svm(formula = Salary ~ . ,
data = dataset,
type = "eps-regression",
kernel = "radial")
#predicción de nuevos resultados con regresión polinómica
y_pred= predict(regression, newdata = data.frame(Level = 6.5))
#Visualización del modelo SVR
library(ggplot2)
ggplot()+ geom_point(aes(x= dataset$Level, y= dataset$Salary),
color= "red") +
geom_line(aes(x = dataset$Level, y= predict(regression, newdata = data.frame(Level=dataset$Level))),
color= "blue") +
ggtitle("Modelo de regresión SVR") +
xlab("Nivel del empleado") +
ylab("Sueldo en USD")
#Ajustar el modelo de regresión de árboles aleatorios
install.packages("randomForest")
library(randomForest)
?randomForest
regression = randomForest(x= dataset[1],
y= dataset$Salary,
ntree = 10)
set.seed(1234)
regression = randomForest(x= dataset[1],
y= dataset$Salary,
ntree = 10)
#predicción de nuevos resultados con regresión polinómica
y_pred= predict(regression, newdata = data.frame(Level = 6.5))
#Visualización del modelo
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot()+ geom_point(aes(x= dataset$Level, y= dataset$Salary),
color= "red") +
geom_line(aes(x = x_grid, y= predict(regression, newdata = data.frame(Level=x_grid))),
color= "blue") +
ggtitle("Modelo de árboles aleatorios") +
xlab("Nivel del empleado") +
ylab("Sueldo en USD")
#Visualización del modelo
library(ggplot2)
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot()+ geom_point(aes(x= dataset$Level, y= dataset$Salary),
color= "red") +
geom_line(aes(x = x_grid, y= predict(regression, newdata = data.frame(Level=x_grid))),
color= "blue") +
ggtitle("Modelo de árboles aleatorios") +
xlab("Nivel del empleado") +
ylab("Sueldo en USD")
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.01)
ggplot()+ geom_point(aes(x= dataset$Level, y= dataset$Salary),
color= "red") +
geom_line(aes(x = x_grid, y= predict(regression, newdata = data.frame(Level=x_grid))),
color= "blue") +
ggtitle("Modelo de árboles aleatorios") +
xlab("Nivel del empleado") +
ylab("Sueldo en USD")
regression = randomForest(x= dataset[1],
y= dataset$Salary,
ntree = 100)
#predicción de nuevos resultados con regresión polinómica
y_pred= predict(regression, newdata = data.frame(Level = 6.5))
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.01)
ggplot()+ geom_point(aes(x= dataset$Level, y= dataset$Salary),
color= "red") +
geom_line(aes(x = x_grid, y= predict(regression, newdata = data.frame(Level=x_grid))),
color= "blue") +
ggtitle("Modelo de árboles aleatorios") +
xlab("Nivel del empleado") +
ylab("Sueldo en USD")
regression = randomForest(x= dataset[1],
y= dataset$Salary,
ntree = 500)
#predicción de nuevos resultados con regresión polinómica
y_pred= predict(regression, newdata = data.frame(Level = 6.5))
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.01)
ggplot()+ geom_point(aes(x= dataset$Level, y= dataset$Salary),
color= "red") +
geom_line(aes(x = x_grid, y= predict(regression, newdata = data.frame(Level=x_grid))),
color= "blue") +
ggtitle("Modelo de árboles aleatorios") +
xlab("Nivel del empleado") +
ylab("Sueldo en USD")
#predicción de nuevos resultados con regresión polinómica
y_pred= predict(regression, newdata = data.frame(Level = 6.5))
set.seed(1234)
regression = randomForest(x= dataset[1],
y= dataset$Salary,
ntree = 500)
#predicción de nuevos resultados con regresión polinómica
y_pred= predict(regression, newdata = data.frame(Level = 6.5))
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.01)
ggplot()+ geom_point(aes(x= dataset$Level, y= dataset$Salary),
color= "red") +
geom_line(aes(x = x_grid, y= predict(regression, newdata = data.frame(Level=x_grid))),
color= "blue") +
ggtitle("Modelo de árboles aleatorios") +
xlab("Nivel del empleado") +
ylab("Sueldo en USD")
setwd("D:/Documentos/abi/Udemy/machineLearning-RyPython/Part 2 -  Regression/Section 7 - Support Vector Regression (SVR)")
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[, 2:3]
#Ajustar el modelo de regresión
install.packages("e1071")
library(e1071)
regression = svm(formula = Salary ~ . ,
data = dataset,
type = "eps-regression",
kernel = "radial")
#predicción de nuevos resultados con regresión polinómica
y_pred= predict(regression, newdata = data.frame(Level = 6.5))
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot()+ geom_point(aes(x= dataset$Level, y= dataset$Salary),
color= "red") +
geom_line(aes(x = dataset$Level, y= predict(regression, newdata = data.frame(Level=dataset$Level))),
color= "blue") +
ggtitle("Modelo de regresión SVR") +
xlab("Nivel del empleado") +
ylab("Sueldo en USD")
#Visualización del modelo SVR
library(ggplot2)
ggplot()+ geom_point(aes(x= dataset$Level, y= dataset$Salary),
color= "red") +
geom_line(aes(x = dataset$Level, y= predict(regression, newdata = data.frame(Level=dataset$Level))),
color= "blue") +
ggtitle("Modelo de regresión SVR") +
xlab("Nivel del empleado") +
ylab("Sueldo en USD")
View(dataset)
